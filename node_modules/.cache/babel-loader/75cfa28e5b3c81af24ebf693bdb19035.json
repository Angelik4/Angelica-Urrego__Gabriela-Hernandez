{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GrupoDot\\\\Documents\\\\DIGITAL_HOUSE\\\\Front-end3\\\\fe3-final-main\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"\",\n  data: []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext(undefined);\nexport const ThemeContext = /*#__PURE__*/createContext(themes.light);\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [datos, setDatos] = useState([]);\n  const themes = {\n    light: {\n      font: 'black',\n      background: 'white'\n    },\n    dark: {\n      font: 'white',\n      background: 'black'\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    try {\n      const urlApi = \"https://jsonplaceholder.typicode.com/users\";\n      const resp = await axios.get(urlApi);\n      console.log(resp);\n      setDatos(resp.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      getData,\n      datos\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"20jPy2YyX4XSkonh/iLlPszBgA8=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","axios","initialState","theme","data","ContextGlobal","undefined","ThemeContext","themes","light","ContextProvider","children","datos","setDatos","font","background","dark","getData","urlApi","resp","get","console","log","error"],"sources":["C:/Users/GrupoDot/Documents/DIGITAL_HOUSE/Front-end3/fe3-final-main/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nexport const initialState = {theme: \"\", data: []}\n\nexport const ContextGlobal = createContext(undefined);\n export const ThemeContext = createContext(themes.light);\n\nexport const ContextProvider = ({ children }) => {\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [datos, setDatos] = useState([]);\n  const themes = {\n    light: {\n    font: 'black',\n    background: 'white'\n    },\n    dark: {\n    font: 'white',\n    background: 'black'\n    }\n    };\n  useEffect(() => {\n      getData();\n  }, []);\n\n  const getData = async () => {\n      try {\n          const urlApi = \"https://jsonplaceholder.typicode.com/users\";\n          const resp = await axios.get(urlApi);\n          console.log(resp)\n          setDatos(resp.data);\n      } catch (error) {\n          console.log(error);\n      }\n  };\n\n  return (\n    <ContextGlobal.Provider \n    value={{\n        getData,\n        datos\n    }}>\n      {children}\n    </ContextGlobal.Provider>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,OAAO,MAAMC,YAAY,GAAG;EAACC,KAAK,EAAE,EAAR;EAAYC,IAAI,EAAE;AAAlB,CAArB;AAEP,OAAO,MAAMC,aAAa,gBAAGP,aAAa,CAACQ,SAAD,CAAnC;AACN,OAAO,MAAMC,YAAY,gBAAGT,aAAa,CAACU,MAAM,CAACC,KAAR,CAAlC;AAER,OAAO,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAMS,MAAM,GAAG;IACbC,KAAK,EAAE;MACPK,IAAI,EAAE,OADC;MAEPC,UAAU,EAAE;IAFL,CADM;IAKbC,IAAI,EAAE;MACNF,IAAI,EAAE,OADA;MAENC,UAAU,EAAE;IAFN;EALO,CAAf;EAUAf,SAAS,CAAC,MAAM;IACZiB,OAAO;EACV,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMA,OAAO,GAAG,YAAY;IACxB,IAAI;MACA,MAAMC,MAAM,GAAG,4CAAf;MACA,MAAMC,IAAI,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAUF,MAAV,CAAnB;MACAG,OAAO,CAACC,GAAR,CAAYH,IAAZ;MACAN,QAAQ,CAACM,IAAI,CAACf,IAAN,CAAR;IACH,CALD,CAKE,OAAOmB,KAAP,EAAc;MACZF,OAAO,CAACC,GAAR,CAAYC,KAAZ;IACH;EACJ,CATD;;EAWA,oBACE,QAAC,aAAD,CAAe,QAAf;IACA,KAAK,EAAE;MACHN,OADG;MAEHL;IAFG,CADP;IAAA,UAKGD;EALH;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CArCM;;GAAMD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}