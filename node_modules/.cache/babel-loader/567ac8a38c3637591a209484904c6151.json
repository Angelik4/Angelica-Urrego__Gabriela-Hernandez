{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GrupoDot\\\\Documents\\\\DIGITAL_HOUSE\\\\Front-end3\\\\fe3-final-main\\\\src\\\\Routes\\\\Favs.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useEffect, useState, userContext } from \"react\";\nimport Card from \"../Components/Card\";\nimport { ThemeContext, themes } from \"../Components/utils/global.context\";\n\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Favs = () => {\n  _s();\n  const {\n    theme\n  } = useContext(ThemeContext);\n  const themeClass = theme === themes.light ? 'light' : 'dark';\n  const [favCards, setFavCards] = useState([]);\n  useEffect(() => {\n    // Obtener los datos del localStorage al cargar la página\n    const storedFavs = JSON.parse(localStorage.getItem(\"favCards\")) || [];\n    setFavCards(storedFavs);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${themeClass}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dentists Favs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-grid\",\n        children: favCards.map(fav => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            name: fav.name,\n            username: fav.username,\n            id: fav.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, fav.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Favs, \"fFMKBGlC5WFOyq4Vv74k6H5ODWs=\");\n_c = Favs;\nexport default Favs;\nvar _c;\n$RefreshReg$(_c, \"Favs\");","map":{"version":3,"names":["React","useEffect","useState","userContext","Card","ThemeContext","themes","jsxDEV","_jsxDEV","Fragment","_Fragment","Favs","_s","theme","useContext","themeClass","light","favCards","setFavCards","storedFavs","JSON","parse","localStorage","getItem","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","fav","name","username","id","_c","$RefreshReg$"],"sources":["C:/Users/GrupoDot/Documents/DIGITAL_HOUSE/Front-end3/fe3-final-main/src/Routes/Favs.jsx"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState, userContext } from \"react\";\nimport Card from \"../Components/Card\";\nimport { ThemeContext, themes } from \"../Components/utils/global.context\";\n\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nconst Favs = () => {\n  const { theme } = useContext(ThemeContext);\n  const themeClass = theme === themes.light ? 'light' : 'dark';\n  const [favCards, setFavCards] = useState([]);\n\n  useEffect(() => {\n    // Obtener los datos del localStorage al cargar la página\n    const storedFavs = JSON.parse(localStorage.getItem(\"favCards\")) || [];\n    setFavCards(storedFavs);\n  }, []);\n\n  return (\n    <>\n    <div className={`${themeClass}`}>\n      <h1>Dentists Favs</h1>\n        <div className=\"card-grid\">\n          {favCards.map((fav) => (\n            <div className=\"card\" key={fav.id}>\n              {/* Reutilizar el componente Card y pasar las propiedades */}\n              <Card name={fav.name} username={fav.username} id={fav.id} />\n            </div>\n          ))}\n        </div>\n    </div>\n    </>\n  );\n};\n\nexport default Favs;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACxD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,YAAY,EAAEC,MAAM,QAAQ,oCAAoC;;AAEzE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC;EAAM,CAAC,GAAGC,UAAU,CAACT,YAAY,CAAC;EAC1C,MAAMU,UAAU,GAAGF,KAAK,KAAKP,MAAM,CAACU,KAAK,GAAG,OAAO,GAAG,MAAM;EAC5D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMkB,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE;IACrEL,WAAW,CAACC,UAAU,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACAhB,OAAA;MAAKiB,SAAS,EAAG,GAAEV,UAAW,EAAE;MAAAS,QAAA,gBAC9BhB,OAAA;QAAAgB,QAAA,EAAI;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpBrB,OAAA;QAAKiB,SAAS,EAAC,WAAW;QAAAD,QAAA,EACvBP,QAAQ,CAACa,GAAG,CAAEC,GAAG,iBAChBvB,OAAA;UAAKiB,SAAS,EAAC,MAAM;UAAAD,QAAA,eAEnBhB,OAAA,CAACJ,IAAI;YAAC4B,IAAI,EAAED,GAAG,CAACC,IAAK;YAACC,QAAQ,EAAEF,GAAG,CAACE,QAAS;YAACC,EAAE,EAAEH,GAAG,CAACG;UAAG;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GAFnCE,GAAG,CAACG,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAG5B,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACJ,CAAC;AAEP,CAAC;AAACjB,EAAA,CA1BID,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AA4BV,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}