{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GrupoDot\\\\Documents\\\\DIGITAL_HOUSE\\\\Front-end3\\\\fe3-final-main\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport ThemeContext, { themes } from \"./contexTheme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"\",\n  data: []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext(undefined);\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [datos, setDatos] = useState([]);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    try {\n      const urlApi = \"https://jsonplaceholder.typicode.com/users\";\n      const resp = await axios.get(urlApi);\n      console.log(resp);\n      setDatos(resp.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const [theme, setTheme] = useState(themes.light);\n\n  const handleChangeTheme = () => {\n    if (theme === themes.dark) setTheme(themes.light);\n    if (theme === themes.light) setTheme(themes.dark);\n  };\n\n  const providerValue = useMemo(() => ({\n    theme,\n    handleChangeTheme\n  }), [theme, handleChangeTheme]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n      value: {\n        getData,\n        datos\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n      value: {\n        theme,\n        handleChangeTheme\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ContextProvider, \"HHSrpRauaB3bzXTkwhnm+iM+4Ew=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useMemo","axios","ThemeContext","themes","initialState","theme","data","ContextGlobal","undefined","ContextProvider","children","datos","setDatos","getData","urlApi","resp","get","console","log","error","setTheme","light","handleChangeTheme","dark","providerValue"],"sources":["C:/Users/GrupoDot/Documents/DIGITAL_HOUSE/Front-end3/fe3-final-main/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport ThemeContext, { themes } from \"./contexTheme\";\nexport const initialState = {theme: \"\", data: []}\n\nexport const ContextGlobal = createContext(undefined);\n\nexport const ContextProvider = ({ children }) => {\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [datos, setDatos] = useState([]);\n  \n  useEffect(() => {\n      getData();\n  }, []);\n\n  const getData = async () => {\n      try {\n          const urlApi = \"https://jsonplaceholder.typicode.com/users\";\n          const resp = await axios.get(urlApi);\n          console.log(resp)\n          setDatos(resp.data);\n      } catch (error) {\n          console.log(error);\n      }\n  };\nconst [theme, setTheme] = useState(themes.light);\nconst handleChangeTheme = () => {\n  if (theme === themes.dark) setTheme(themes.light)\n  if (theme === themes.light) setTheme(themes.dark)\n}\nconst providerValue = useMemo(()=>({theme,\n  handleChangeTheme}),[theme,handleChangeTheme])\n\n  return (\n    <>\n     <ContextGlobal.Provider \n    value={{\n        getData,\n        datos\n    }}>\n      {children}\n    </ContextGlobal.Provider>\n    <ThemeContext.Provider value={{ theme, handleChangeTheme }}>\n      {children}\n    </ThemeContext.Provider>\n    </> \n  );\n};\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,OAA7C,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,IAAuBC,MAAvB,QAAqC,eAArC;;;AACA,OAAO,MAAMC,YAAY,GAAG;EAACC,KAAK,EAAE,EAAR;EAAYC,IAAI,EAAE;AAAlB,CAArB;AAEP,OAAO,MAAMC,aAAa,gBAAGV,aAAa,CAACW,SAAD,CAAnC;AAEP,OAAO,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACZc,OAAO;EACV,CAFQ,EAEN,EAFM,CAAT;;EAIA,MAAMA,OAAO,GAAG,YAAY;IACxB,IAAI;MACA,MAAMC,MAAM,GAAG,4CAAf;MACA,MAAMC,IAAI,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAUF,MAAV,CAAnB;MACAG,OAAO,CAACC,GAAR,CAAYH,IAAZ;MACAH,QAAQ,CAACG,IAAI,CAACT,IAAN,CAAR;IACH,CALD,CAKE,OAAOa,KAAP,EAAc;MACZF,OAAO,CAACC,GAAR,CAAYC,KAAZ;IACH;EACJ,CATD;;EAUF,MAAM,CAACd,KAAD,EAAQe,QAAR,IAAoBtB,QAAQ,CAACK,MAAM,CAACkB,KAAR,CAAlC;;EACA,MAAMC,iBAAiB,GAAG,MAAM;IAC9B,IAAIjB,KAAK,KAAKF,MAAM,CAACoB,IAArB,EAA2BH,QAAQ,CAACjB,MAAM,CAACkB,KAAR,CAAR;IAC3B,IAAIhB,KAAK,KAAKF,MAAM,CAACkB,KAArB,EAA4BD,QAAQ,CAACjB,MAAM,CAACoB,IAAR,CAAR;EAC7B,CAHD;;EAIA,MAAMC,aAAa,GAAGxB,OAAO,CAAC,OAAK;IAACK,KAAD;IACjCiB;EADiC,CAAL,CAAD,EACP,CAACjB,KAAD,EAAOiB,iBAAP,CADO,CAA7B;EAGE,oBACE;IAAA,wBACC,QAAC,aAAD,CAAe,QAAf;MACD,KAAK,EAAE;QACHT,OADG;QAEHF;MAFG,CADN;MAAA,UAKED;IALF;MAAA;MAAA;MAAA;IAAA,QADD,eAQA,QAAC,YAAD,CAAc,QAAd;MAAuB,KAAK,EAAE;QAAEL,KAAF;QAASiB;MAAT,CAA9B;MAAA,UACGZ;IADH;MAAA;MAAA;MAAA;IAAA,QARA;EAAA,gBADF;AAcD,CAxCM;;GAAMD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}